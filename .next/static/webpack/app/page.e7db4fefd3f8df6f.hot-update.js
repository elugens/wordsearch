"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/ai.ts":
/*!***********************!*\
  !*** ./src/lib/ai.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateWordsForCategory: function() { return /* binding */ generateWordsForCategory; }\n/* harmony export */ });\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/generative-ai */ \"(app-pages-browser)/./node_modules/@google/generative-ai/dist/index.mjs\");\n\n// Initialize the Gemini API with your API key\nconst genAI = new _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenerativeAI(\"AIzaSyAwdJB4m1d0zyq5PmGYfIuItkVeDQnTZTg\" || 0);\nasync function generateWordsForCategory(category) {\n    let count = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    try {\n        const model = genAI.getGenerativeModel({\n            model: \"gemini-pro\"\n        });\n        const prompt = \"Generate \".concat(count, ' single words related to the category \"').concat(category, '\". \\n    The words should be:\\n    - Related to ').concat(category, \"\\n    - Single words (no phrases)\\n    - Between 3-12 letters long\\n    - Suitable for a word search puzzle\\n    - Common/well-known words\\n    - Return only the words, one per line, in UPPERCASE, with no numbers or explanations.\");\n        const result = await model.generateContent(prompt);\n        const response = await result.response;\n        const text = response.text();\n        // Split the response into lines and clean up\n        const words = text.split(\"\\n\").map((word)=>word.trim().toUpperCase()).filter((word)=>word.length >= 3 && word.length <= 12 && /^[A-Z]+$/.test(word)).slice(0, count);\n        return words;\n    } catch (error) {\n        console.error(\"Error generating words:\", error);\n        // Return some default words if AI fails\n        const defaultWords = [\n            \"MEDIA\",\n            \"LITERACY\",\n            \"NEWS\",\n            \"FACT\",\n            \"SOURCE\",\n            \"TRUTH\",\n            \"BIAS\",\n            \"VERIFY\",\n            \"CHECK\",\n            \"RESEARCH\",\n            \"ANALYZE\",\n            \"EVALUATE\",\n            \"CRITICAL\",\n            \"THINK\",\n            \"SHARE\"\n        ];\n        return defaultWords.slice(0, count);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYWkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkQ7QUFFM0QsOENBQThDO0FBQzlDLE1BQU1DLFFBQVEsSUFBSUQscUVBQWtCQSxDQUFDRSx5Q0FBa0MsSUFBSTtBQUVwRSxlQUFlRyx5QkFBeUJDLFFBQWdCO1FBQUVDLFFBQUFBLGlFQUFnQjtJQUMvRSxJQUFJO1FBQ0YsTUFBTUMsUUFBUVAsTUFBTVEsa0JBQWtCLENBQUM7WUFBRUQsT0FBTztRQUFhO1FBRTdELE1BQU1FLFNBQVMsWUFBMkRKLE9BQS9DQyxPQUFNLDJDQUVsQkQsT0FGMkRBLFVBQVMsb0RBRTNELE9BQVRBLFVBQVM7UUFPeEIsTUFBTUssU0FBUyxNQUFNSCxNQUFNSSxlQUFlLENBQUNGO1FBQzNDLE1BQU1HLFdBQVcsTUFBTUYsT0FBT0UsUUFBUTtRQUN0QyxNQUFNQyxPQUFPRCxTQUFTQyxJQUFJO1FBRTFCLDZDQUE2QztRQUM3QyxNQUFNQyxRQUFRRCxLQUNYRSxLQUFLLENBQUMsTUFDTkMsR0FBRyxDQUFDQyxDQUFBQSxPQUFRQSxLQUFLQyxJQUFJLEdBQUdDLFdBQVcsSUFDbkNDLE1BQU0sQ0FBQ0gsQ0FBQUEsT0FBUUEsS0FBS0ksTUFBTSxJQUFJLEtBQUtKLEtBQUtJLE1BQU0sSUFBSSxNQUFNLFdBQVdDLElBQUksQ0FBQ0wsT0FDeEVNLEtBQUssQ0FBQyxHQUFHakI7UUFFWixPQUFPUTtJQUNULEVBQUUsT0FBT1UsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6Qyx3Q0FBd0M7UUFDeEMsTUFBTUUsZUFBZTtZQUNuQjtZQUFTO1lBQVk7WUFBUTtZQUFRO1lBQ3JDO1lBQVM7WUFBUTtZQUFVO1lBQVM7WUFDcEM7WUFBVztZQUFZO1lBQVk7WUFBUztTQUM3QztRQUNELE9BQU9BLGFBQWFILEtBQUssQ0FBQyxHQUFHakI7SUFDL0I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL2FpLnRzP2RhMjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR29vZ2xlR2VuZXJhdGl2ZUFJIH0gZnJvbSAnQGdvb2dsZS9nZW5lcmF0aXZlLWFpJztcblxuLy8gSW5pdGlhbGl6ZSB0aGUgR2VtaW5pIEFQSSB3aXRoIHlvdXIgQVBJIGtleVxuY29uc3QgZ2VuQUkgPSBuZXcgR29vZ2xlR2VuZXJhdGl2ZUFJKHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0dFTUlOSV9BUEkgfHwgJycpO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVXb3Jkc0ZvckNhdGVnb3J5KGNhdGVnb3J5OiBzdHJpbmcsIGNvdW50OiBudW1iZXIgPSAxMCk6IFByb21pc2U8c3RyaW5nW10+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBtb2RlbCA9IGdlbkFJLmdldEdlbmVyYXRpdmVNb2RlbCh7IG1vZGVsOiAnZ2VtaW5pLXBybycgfSk7XG5cbiAgICBjb25zdCBwcm9tcHQgPSBgR2VuZXJhdGUgJHtjb3VudH0gc2luZ2xlIHdvcmRzIHJlbGF0ZWQgdG8gdGhlIGNhdGVnb3J5IFwiJHtjYXRlZ29yeX1cIi4gXG4gICAgVGhlIHdvcmRzIHNob3VsZCBiZTpcbiAgICAtIFJlbGF0ZWQgdG8gJHtjYXRlZ29yeX1cbiAgICAtIFNpbmdsZSB3b3JkcyAobm8gcGhyYXNlcylcbiAgICAtIEJldHdlZW4gMy0xMiBsZXR0ZXJzIGxvbmdcbiAgICAtIFN1aXRhYmxlIGZvciBhIHdvcmQgc2VhcmNoIHB1enpsZVxuICAgIC0gQ29tbW9uL3dlbGwta25vd24gd29yZHNcbiAgICAtIFJldHVybiBvbmx5IHRoZSB3b3Jkcywgb25lIHBlciBsaW5lLCBpbiBVUFBFUkNBU0UsIHdpdGggbm8gbnVtYmVycyBvciBleHBsYW5hdGlvbnMuYDtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1vZGVsLmdlbmVyYXRlQ29udGVudChwcm9tcHQpO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVzdWx0LnJlc3BvbnNlO1xuICAgIGNvbnN0IHRleHQgPSByZXNwb25zZS50ZXh0KCk7XG4gICAgXG4gICAgLy8gU3BsaXQgdGhlIHJlc3BvbnNlIGludG8gbGluZXMgYW5kIGNsZWFuIHVwXG4gICAgY29uc3Qgd29yZHMgPSB0ZXh0XG4gICAgICAuc3BsaXQoJ1xcbicpXG4gICAgICAubWFwKHdvcmQgPT4gd29yZC50cmltKCkudG9VcHBlckNhc2UoKSlcbiAgICAgIC5maWx0ZXIod29yZCA9PiB3b3JkLmxlbmd0aCA+PSAzICYmIHdvcmQubGVuZ3RoIDw9IDEyICYmIC9eW0EtWl0rJC8udGVzdCh3b3JkKSlcbiAgICAgIC5zbGljZSgwLCBjb3VudCk7XG5cbiAgICByZXR1cm4gd29yZHM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2VuZXJhdGluZyB3b3JkczonLCBlcnJvcik7XG4gICAgLy8gUmV0dXJuIHNvbWUgZGVmYXVsdCB3b3JkcyBpZiBBSSBmYWlsc1xuICAgIGNvbnN0IGRlZmF1bHRXb3JkcyA9IFtcbiAgICAgICdNRURJQScsICdMSVRFUkFDWScsICdORVdTJywgJ0ZBQ1QnLCAnU09VUkNFJyxcbiAgICAgICdUUlVUSCcsICdCSUFTJywgJ1ZFUklGWScsICdDSEVDSycsICdSRVNFQVJDSCcsXG4gICAgICAnQU5BTFlaRScsICdFVkFMVUFURScsICdDUklUSUNBTCcsICdUSElOSycsICdTSEFSRSdcbiAgICBdO1xuICAgIHJldHVybiBkZWZhdWx0V29yZHMuc2xpY2UoMCwgY291bnQpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiR29vZ2xlR2VuZXJhdGl2ZUFJIiwiZ2VuQUkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfR0VNSU5JX0FQSSIsImdlbmVyYXRlV29yZHNGb3JDYXRlZ29yeSIsImNhdGVnb3J5IiwiY291bnQiLCJtb2RlbCIsImdldEdlbmVyYXRpdmVNb2RlbCIsInByb21wdCIsInJlc3VsdCIsImdlbmVyYXRlQ29udGVudCIsInJlc3BvbnNlIiwidGV4dCIsIndvcmRzIiwic3BsaXQiLCJtYXAiLCJ3b3JkIiwidHJpbSIsInRvVXBwZXJDYXNlIiwiZmlsdGVyIiwibGVuZ3RoIiwidGVzdCIsInNsaWNlIiwiZXJyb3IiLCJjb25zb2xlIiwiZGVmYXVsdFdvcmRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/ai.ts\n"));

/***/ })

});