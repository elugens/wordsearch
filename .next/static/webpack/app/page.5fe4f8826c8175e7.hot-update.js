"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/wordSearchGenerator.ts":
/*!****************************************!*\
  !*** ./src/lib/wordSearchGenerator.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateWordSearch: function() { return /* binding */ generateWordSearch; }\n/* harmony export */ });\n/* harmony import */ var _ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ai */ \"(app-pages-browser)/./src/lib/ai.ts\");\n\nconst GRID_SIZE = 15;\n// Direction vectors for word placement\nconst DIRECTIONS = {\n    easy: [\n        [\n            0,\n            1\n        ],\n        [\n            1,\n            0\n        ]\n    ],\n    medium: [\n        [\n            0,\n            1\n        ],\n        [\n            1,\n            0\n        ],\n        [\n            1,\n            1\n        ],\n        [\n            -1,\n            1\n        ]\n    ],\n    hard: [\n        [\n            0,\n            1\n        ],\n        [\n            1,\n            0\n        ],\n        [\n            1,\n            1\n        ],\n        [\n            -1,\n            1\n        ],\n        [\n            0,\n            -1\n        ],\n        [\n            -1,\n            0\n        ],\n        [\n            -1,\n            -1\n        ],\n        [\n            1,\n            -1\n        ]\n    ]\n};\nfunction createEmptyGrid(size) {\n    return Array(size).fill(null).map(()=>Array(size).fill(\"\"));\n}\nfunction canPlaceWord(grid, word, row, col, dRow, dCol) {\n    if (row + dRow * (word.length - 1) >= grid.length || row + dRow * (word.length - 1) < 0 || col + dCol * (word.length - 1) >= grid[0].length || col + dCol * (word.length - 1) < 0) {\n        return false;\n    }\n    for(let i = 0; i < word.length; i++){\n        const currentCell = grid[row + dRow * i][col + dCol * i];\n        if (currentCell !== \"\" && currentCell !== word[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction placeWord(grid, word, row, col, dRow, dCol) {\n    for(let i = 0; i < word.length; i++){\n        grid[row + dRow * i][col + dCol * i] = word[i];\n    }\n}\nfunction fillEmptyCells(grid) {\n    const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for(let i = 0; i < grid.length; i++){\n        for(let j = 0; j < grid[i].length; j++){\n            if (grid[i][j] === \"\") {\n                grid[i][j] = letters[Math.floor(Math.random() * letters.length)];\n            }\n        }\n    }\n}\nasync function generateWordSearch(category) {\n    let numWords = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 5, complexity = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"medium\";\n    try {\n        // Get words from AI based on category\n        const words = await (0,_ai__WEBPACK_IMPORTED_MODULE_0__.generateWordsForCategory)(category, numWords);\n        if (!words || words.length === 0) {\n            throw new Error(\"No words generated\");\n        }\n        const grid = createEmptyGrid(GRID_SIZE);\n        const placedWords = [];\n        const availableDirections = DIRECTIONS[complexity];\n        // Try to place each word\n        for (const word of words){\n            let placed = false;\n            let attempts = 0;\n            const maxAttempts = 100;\n            // Skip words that are too long\n            if (word.length > GRID_SIZE) {\n                console.warn('Word \"'.concat(word, '\" is too long for the grid'));\n                continue;\n            }\n            while(!placed && attempts < maxAttempts){\n                const direction = availableDirections[Math.floor(Math.random() * availableDirections.length)];\n                const row = Math.floor(Math.random() * GRID_SIZE);\n                const col = Math.floor(Math.random() * GRID_SIZE);\n                if (canPlaceWord(grid, word, row, col, direction[0], direction[1])) {\n                    placeWord(grid, word, row, col, direction[0], direction[1]);\n                    placedWords.push(word);\n                    placed = true;\n                }\n                attempts++;\n            }\n            if (!placed) {\n                console.warn('Could not place word \"'.concat(word, '\" after ').concat(maxAttempts, \" attempts\"));\n            }\n        }\n        // If no words were placed, throw an error\n        if (placedWords.length === 0) {\n            throw new Error(\"Could not place any words in the grid\");\n        }\n        fillEmptyCells(grid);\n        return {\n            grid,\n            words: placedWords\n        };\n    } catch (error) {\n        console.error(\"Error in generateWordSearch:\", error);\n        // Return a simple default puzzle if something goes wrong\n        const defaultGrid = createEmptyGrid(GRID_SIZE);\n        const defaultWords = [\n            \"ERROR\"\n        ];\n        placeWord(defaultGrid, \"ERROR try generating the puzzle again\", 0, 0, 0, 1);\n        fillEmptyCells(defaultGrid);\n        return {\n            grid: defaultGrid,\n            words: defaultWords\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/wordSearchGenerator.ts\n"));

/***/ })

});